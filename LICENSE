<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Salsa Learning App</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <nav>
        <ul>
            <li><a href="index.html">Home</a></li>
            <li><a href="basics.html">Basic Steps</a></li>
            <li><a href="moves.html">Moves & Patterns</a></li>
            <li><a href="music.html">Music & Rhythm</a></li>
        </ul>
    </nav>
    <main>
        <h1>Welcome to Salsa Learning!</h1>
        <p>This app will help you learn salsa dancing from the basics to more advanced moves.</p>
        <div class="image-placeholder">
            <p>Image of salsa dancers would go here</p>
        </div>
    </main>
    <script src="script.js"></script>
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Basic Steps - Salsa Learning App</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <nav>
        <ul>
            <li><a href="index.html">Home</a></li>
            <li><a href="basics.html">Basic Steps</a></li>
            <li><a href="moves.html">Moves & Patterns</a></li>
            <li><a href="music.html">Music & Rhythm</a></li>
        </ul>
    </nav>
    <main>
        <h1>Basic Steps</h1>
        <div class="step">
            <h2>Basic Step (On1)</h2>
            <p>Description: Step forward with the left foot, replace weight to right foot, step back with left foot. Then step back with right foot, replace weight to left foot, step forward with right foot.</p>
            <div class="image-placeholder">
                <p>GIF showing the basic step</p>
            </div>
        </div>
        <!-- More steps can be added -->
    </main>
    <script src="script.js"></script>
</body>
</html>
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f4f4f4;
}

nav {
    background-color: #333;
    color: white;
    padding: 10px;
}

nav ul {
    list-style-type: none;
    padding: 0;
    display: flex;
    justify-content: space-around;
}

nav a {
    color: white;
    text-decoration: none;
}

main {
    padding: 20px;
}

.image-placeholder {
    width: 100%;
    height: 200px;
    background-color: #ddd;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 20px 0;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music & Rhythm - Salsa Learning App</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <nav>
        <ul>
            <li><a href="index.html">Home</a></li>
            <li><a href="basics.html">Basic Steps</a></li>
            <li><a href="moves.html">Moves & Patterns</a></li>
            <li><a href="music.html">Music & Rhythm</a></li>
        </ul>
    </nav>
    <main>
        <h1>Music & Rhythm</h1>
        <p>Set the beats per minute (BPM) for the metronome:</p>
        <input type="number" id="bpm" value="120" min="60" max="240">
        <button id="startMetronome">Start</button>
        <button id="stopMetronome">Stop</button>
        <div id="metronomeDisplay">Click Start</div>
    </main>
    <script src="script.js"></script>
</body>
</html>// script.js
document.addEventListener('DOMContentLoaded', function() {
    // Metronome code will run only on the music page
    if (window.location.pathname.endsWith('music.html')) {
        let bpmInput = document.getElementById('bpm');
        let startButton = document.getElementById('startMetronome');
        let stopButton = document.getElementById('stopMetronome');
        let display = document.getElementById('metronomeDisplay');
        
        let audioContext;
        let interval;
        let isRunning = false;
        
        // We'll create a simple beep sound
        function beep() {
            if (!audioContext) {
                audioContext = new (window.AudioContext || window.webkitAudioContext)();
            }
            
            let oscillator = audioContext.createOscillator();
            let gainNode = audioContext.createGain();
            
            oscillator.connect(gainNode);
            gainNode.connect(audioContext.destination);
            
            oscillator.frequency.value = 800;
            gainNode.gain.value = 0.1;
            
            oscillator.start();
            setTimeout(() => {
                oscillator.stop();
            }, 50);
        }
        
        startButton.addEventListener('click', function() {
            if (isRunning) return;
            isRunning = true;
            let bpm = parseInt(bpmInput.value);
            let intervalMs = (60 / bpm) * 1000;
            
            // Start immediately and then every intervalMs
            beep();
            display.textContent = 'Tick';
            interval = setInterval(function() {
                beep();
                display.textContent = display.textContent === 'Tick' ? 'Tock' : 'Tick';
            }, intervalMs);
        });
        
        stopButton.addEventListener('click', function() {
            if (!isRunning) return;
            isRunning = false;
            clearInterval(interval);
            display.textContent = 'Stopped';
        });
    }
});
